<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GymSphere</title>
    
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <style>
        /* Add your custom styles here */
        #user-query {
            margin-bottom: 10px;
        }
        #voice-input-button {
            margin-left: 10px;
        }
    </style>
</head>
<body>
    <input type="text" id="user-query" placeholder="Enter your query or speak...">
    <button id="voice-input-button">Speak</button>
    <audio id="response-audio" style="display: none;">
        <source src="response_sound.mp3" type="audio/mpeg">
        Your browser does not support the audio element.
    </audio>
    
    <script src="https://www.gstatic.com/dialogflow-console/fast/messenger/bootstrap.js?v=1"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script>
        async function handleVoiceInput() {
            const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
            const recognition = new SpeechRecognition();
            recognition.lang = 'en-US';

            recognition.onresult = function(event) {
                const result = event.results[0][0].transcript;
                document.getElementById('user-query').value = result;
                                fetch('/dialogflow/webhook', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        queryResult: {
                            intent: {
                                displayName: 'UserQuery' 
                            },
                            parameters: {
                                query: result
                            }
                        }
                    })
                })
                .then(response => response.json())
                .then(data => {
                    const responseText = data.fulfillmentText;
                    
                    // Play text-to-speech audio
                    textToSpeech(responseText);
                })
                .catch(error => {
                    console.error('Error:', error);
                });
            }

            recognition.start();
        }

        // Function to convert text to speech using Web Speech API
        function textToSpeech(text) {
            const utterance = new SpeechSynthesisUtterance();
            utterance.text = text;
            window.speechSynthesis.speak(utterance);
        }

        document.getElementById('voice-input-button').addEventListener('click', handleVoiceInput);
    </script>
</body>
</html>
